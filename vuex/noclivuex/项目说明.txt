本Demo 使用vue-cli 生成，但生成过程中未选择vuex，采用手动方式引入 vuex：
1.  安装vuex ：npm install vuex 
2. 在生成的项目src目录中，手动建立store.js;

```
import Vue from 'vue'
import Vuex from 'vuex'
Vue.use(Vuex);
const state = {
  count :0
}

const mutations = {
  add(state){
    state.count++;
  },
  reduce(state){
    state.count--;
  }
}
export default new Vuex.Store({
	state,
	mutations
})

```
3. 在 main.js 入口文件引入 该store.js 

import store from './store'
....
new Vue({
  router,
  store,
  render: h => h(App),
}).$mount('#app')



3.1 . 也可在 根组件 App.vue 中导入，然后作为该组件的 state 属性

vuex 官网：
Vuex 通过 store 选项，提供了一种机制将状态从根组件“注入”到每一个子组件中（需调用 Vue.use(Vuex)） 


```
<script>
import store from './store.js'

import {mapState} from 'vuex';



export default {
      computed:{

	...mapState(["count"]), // mapState 函数返回一个对象
                mycount:mapState(["count"]).count
	
       },
		
     
       data(){
 
        	return {
 
		msg:'hello vuex'
 
	          }
    
         },
      
        store:store
......
}
```


